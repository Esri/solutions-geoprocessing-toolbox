# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# HLZAreas.py
# Created on: 2013-06-20 12:45:23.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: HLZAreas <Output_Geodatabase> <SuitableAreasDatasetName> <Area_of_Interest> <Slope_Layer> <Combined_Vegetation_Coverage> <Suitable_Areas_Dataset> <Overall_Area_of_Interest> <Obstructions> 
# Description: 
# Preliminary identification of areas where a helicopter can land based on suitable slope, vegetation, obstacles, and helicopter specifications and tolerances.
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")

# Load required toolboxes
arcpy.ImportToolbox("Model Functions")
arcpy.ImportToolbox("C:/work/dcgsa/huachuca/templates/Helicopter Landing Zone/Maps/Toolboxes/Helicopter Landing Zone Tools.tbx")

# Script arguments
Output_Geodatabase = arcpy.GetParameterAsText(0)
if Output_Geodatabase == '#' or not Output_Geodatabase:
    Output_Geodatabase = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\HelicopterLandingZone.gdb" # provide a default value if unspecified

SuitableAreasDatasetName = arcpy.GetParameterAsText(1)
if SuitableAreasDatasetName == '#' or not SuitableAreasDatasetName:
    SuitableAreasDatasetName = "SuitableAreas" # provide a default value if unspecified

Area_of_Interest = arcpy.GetParameterAsText(2)
if Area_of_Interest == '#' or not Area_of_Interest:
    Area_of_Interest = "in_memory\\{E712E2C9-E284-47E5-9BA4-783A1F9F4A3A}" # provide a default value if unspecified

Slope_Layer = arcpy.GetParameterAsText(3)
if Slope_Layer == '#' or not Slope_Layer:
    Slope_Layer = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\digitalelevationmodel.gdb\\Slope" # provide a default value if unspecified

Combined_Vegetation_Coverage = arcpy.GetParameterAsText(4)
if Combined_Vegetation_Coverage == '#' or not Combined_Vegetation_Coverage:
    Combined_Vegetation_Coverage = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\HelicopterLandingZone.gdb\\CombinedVegetationCoverage" # provide a default value if unspecified

Suitable_Areas_Dataset = arcpy.GetParameterAsText(5)
if Suitable_Areas_Dataset == '#' or not Suitable_Areas_Dataset:
    Suitable_Areas_Dataset = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\HelicopterLandingZone.gdb\\SuitableAreas" # provide a default value if unspecified

Overall_Area_of_Interest = arcpy.GetParameterAsText(6)
if Overall_Area_of_Interest == '#' or not Overall_Area_of_Interest:
    Overall_Area_of_Interest = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\HelicopterLandingZone.gdb\\SuitableAreas\\%SuitableAreasDatasetName%_Overall_Area_Of_Interest" # provide a default value if unspecified

Obstructions = arcpy.GetParameterAsText(7)
if Obstructions == '#' or not Obstructions:
    Obstructions = "'C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\utds.gdb\\utds\\StructureSrf'" # provide a default value if unspecified

# Local variables:
AOI = Area_of_Interest
Clipped_Veg = AOI
Clipped_Veg_Layer = Clipped_Veg
Veg_Selection = Clipped_Veg_Layer
clippedveg_Intersect = Veg_Selection
ouptutFeatureClass = clippedveg_Intersect
Output_Feature_Class = ouptutFeatureClass
dissolved_Project = Output_Feature_Class
Dissolved_Projected_Layer = dissolved_Project
Suitable_Areas = Dissolved_Projected_Layer
Suitable_Areas_FC = Suitable_Areas
Output_Spatial_Reference = AOI
clippedelev = AOI
Slope_<__MaxSlopeValue = clippedelev
Slope_Polys = Slope_<__MaxSlopeValue
Cell_Size = Slope_Layer
Input_true_constant__1 = "1"
Aircraft_Specifications = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\HelicopterLandingZone.gdb\\Aircraft_Specifications"
Aircraft_Specifications_Stat = "C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\Scratch.gdb\\Aircraft_Specifications_Stat"

# Process: Copy Features (2)
arcpy.CopyFeatures_management(Area_of_Interest, AOI, "", "0", "0", "0")

# Process: Create Spatial Reference
arcpy.CreateSpatialReference_management("PROJCS['WGS_1984_Web_Mercator_Auxiliary_Sphere',GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Mercator_Auxiliary_Sphere'],PARAMETER['False_Easting',0.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',0.0],PARAMETER['Standard_Parallel_1',0.0],PARAMETER['Auxiliary_Sphere_Type',0.0],UNIT['Meter',1.0]];-20037700 -30241100 10000;-100000 10000;-100000 10000;0.001;0.001;0.001;IsHighPrecision", AOI, "", "", "", "", "0")

# Process: Create Feature Dataset
arcpy.CreateFeatureDataset_management(Output_Geodatabase, SuitableAreasDatasetName, Output_Spatial_Reference)

# Process: Create Area of Interest Feature Class
arcpy.FeatureClassToFeatureClass_conversion("", Suitable_Areas_Dataset, "%SuitableAreasDatasetName%_Overall_Area_Of_Interest", "", "", "")

# Process: Clip CVC
arcpy.Clip_analysis(Combined_Vegetation_Coverage, AOI, Clipped_Veg, "")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(Clipped_Veg, Clipped_Veg_Layer, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;fcsubtype fcsubtype VISIBLE NONE;f_code f_code VISIBLE NONE;adr adr VISIBLE NONE;aoo aoo VISIBLE NONE;ara ara VISIBLE NONE;atb atb VISIBLE NONE;awp awp VISIBLE NONE;caa caa VISIBLE NONE;dmbc dmbc VISIBLE NONE;dmbl dmbl VISIBLE NONE;dmbu dmbu VISIBLE NONE;dmt dmt VISIBLE NONE;ffn ffn VISIBLE NONE;ffn2 ffn2 VISIBLE NONE;ffn3 ffn3 VISIBLE NONE;hgt hgt VISIBLE NONE;lmc lmc VISIBLE NONE;lzn lzn VISIBLE NONE;oth oth VISIBLE NONE;pcf pcf VISIBLE NONE;ppo ppo VISIBLE NONE;ppo2 ppo2 VISIBLE NONE;ppo3 ppo3 VISIBLE NONE;pvh pvh VISIBLE NONE;sdsc sdsc VISIBLE NONE;sdsl sdsl VISIBLE NONE;sdsu sdsu VISIBLE NONE;ssr ssr VISIBLE NONE;ssr2 ssr2 VISIBLE NONE;ssr3 ssr3 VISIBLE NONE;tos tos VISIBLE NONE;tre tre VISIBLE NONE;tscc tscc VISIBLE NONE;tscl tscl VISIBLE NONE;tscu tscu VISIBLE NONE;ufi ufi VISIBLE NONE;vcm vcm VISIBLE NONE;vcm2 vcm2 VISIBLE NONE;vcm3 vcm3 VISIBLE NONE;vlm vlm VISIBLE NONE;voi voi VISIBLE NONE;vsp vsp VISIBLE NONE;vsp2 vsp2 VISIBLE NONE;vsp3 vsp3 VISIBLE NONE;wid wid VISIBLE NONE;zi004_rcg zi004_rcg VISIBLE NONE;zi005_fna zi005_fna VISIBLE NONE;zi005_nfn zi005_nfn VISIBLE NONE;zi006_mem zi006_mem VISIBLE NONE;zi013_csp zi013_csp VISIBLE NONE;zi013_csp2 zi013_csp2 VISIBLE NONE;zi013_csp3 zi013_csp3 VISIBLE NONE;zi013_ffp zi013_ffp VISIBLE NONE;zi013_ffp2 zi013_ffp2 VISIBLE NONE;zi013_ffp3 zi013_ffp3 VISIBLE NONE;zi013_fmm zi013_fmm VISIBLE NONE;zi013_fmm2 zi013_fmm2 VISIBLE NONE;zi013_fmm3 zi013_fmm3 VISIBLE NONE;zi013_irg zi013_irg VISIBLE NONE;zi014_ppo zi014_ppo VISIBLE NONE;zi014_ppo2 zi014_ppo2 VISIBLE NONE;zi014_ppo3 zi014_ppo3 VISIBLE NONE;zi018_wit zi018_wit VISIBLE NONE;zsax_rs0 zsax_rs0 VISIBLE NONE;zsax_rx3 zsax_rx3 VISIBLE NONE;zsax_rx4 zsax_rx4 VISIBLE NONE;zvh zvh VISIBLE NONE;created_user created_user VISIBLE NONE;created_date created_date VISIBLE NONE;last_edited_user last_edited_user VISIBLE NONE;last_edited_date last_edited_date VISIBLE NONE;adi adi VISIBLE NONE;cam cam VISIBLE NONE;ccg ccg VISIBLE NONE;cso cso VISIBLE NONE;cul cul VISIBLE NONE;hei hei VISIBLE NONE;hss hss VISIBLE NONE;mcc mcc VISIBLE NONE;mcc2 mcc2 VISIBLE NONE;mcc3 mcc3 VISIBLE NONE;srl srl VISIBLE NONE;ssc ssc VISIBLE NONE;tty tty VISIBLE NONE;zi024_ywq zi024_ywq VISIBLE NONE;zi037_rel zi037_rel VISIBLE NONE;zi037_rfa zi037_rfa VISIBLE NONE;aqn aqn VISIBLE NONE;ba000_vdc ba000_vdc VISIBLE NONE;ba000_vdr ba000_vdr VISIBLE NONE;cet cet VISIBLE NONE;dof dof VISIBLE NONE;fic fic VISIBLE NONE;got got VISIBLE NONE;pfd pfd VISIBLE NONE;pfh pfh VISIBLE NONE;rkf rkf VISIBLE NONE;sad sad VISIBLE NONE;sdcc sdcc VISIBLE NONE;sdcl sdcl VISIBLE NONE;sdcu sdcu VISIBLE NONE;sdo sdo VISIBLE NONE;sdt sdt VISIBLE NONE;sgcc sgcc VISIBLE NONE;sgcl sgcl VISIBLE NONE;sgcu sgcu VISIBLE NONE;shd shd VISIBLE NONE;sic sic VISIBLE NONE;slt slt VISIBLE NONE;srd srd VISIBLE NONE;stp stp VISIBLE NONE;swc swc VISIBLE NONE;trs trs VISIBLE NONE;trs2 trs2 VISIBLE NONE;trs3 trs3 VISIBLE NONE;tsm tsm VISIBLE NONE;tsm2 tsm2 VISIBLE NONE;tsm3 tsm3 VISIBLE NONE;wle wle VISIBLE NONE;ama ama VISIBLE NONE;cct cct VISIBLE NONE;bac bac VISIBLE NONE;hhd hhd VISIBLE NONE;stl stl VISIBLE NONE;stl2 stl2 VISIBLE NONE;stl3 stl3 VISIBLE NONE;wpi wpi VISIBLE NONE;zi005_fna1 zi005_fna1 VISIBLE NONE;zi005_fna2 zi005_fna2 VISIBLE NONE;zi005_nfn1 zi005_nfn1 VISIBLE NONE;zi005_nfn2 zi005_nfn2 VISIBLE NONE;bmc bmc VISIBLE NONE;bmc2 bmc2 VISIBLE NONE;bmc3 bmc3 VISIBLE NONE;boc boc VISIBLE NONE;hyp hyp VISIBLE NONE;sbc sbc VISIBLE NONE;tid tid VISIBLE NONE;veg veg VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE;Shape_Area Shape_Area VISIBLE NONE;Shape_length Shape_length VISIBLE NONE;Shape_area Shape_area VISIBLE NONE")

# Process: Select Layer By Attribute
arcpy.SelectLayerByAttribute_management(Clipped_Veg_Layer, "NEW_SELECTION", "f_code = 'BH135' OR f_code = 'DA020' OR f_code = 'EA010' OR f_code = 'EB010' OR f_code = 'EB015' OR f_code = 'EB020' OR f_code = 'EC040' OR f_code = 'EE020' OR f_code = 'BH150' OR f_code = 'BJ030' OR f_code = 'BJ100' OR f_code = 'BJ110' OR f_code = 'GB055' OR f_code = 'GB075' OR f_code = 'AK160' OR f_code = 'AK120' OR f_code = 'AK040' OR f_code = 'AK100' OR f_code = 'AK101' OR f_code = 'AK090'")

# Process: Calculate Value: Cell Size
arcpy.CalculateValue_management("CalcCellSize(r\"%AOI%\")", "def CalcCellSize(ds):\\n   desc = arcpy.Describe(ds)\\n   mx = max(desc.extent.width,desc.extent.height)\\n   return float(mx/2000.0)", "Cell Size")

# Process: Extract by Mask
tempEnvironment0 = arcpy.env.cellSize
arcpy.env.cellSize = "1"
arcpy.gp.ExtractByMask_sa(Slope_Layer, AOI, clippedelev)
arcpy.env.cellSize = tempEnvironment0

# Process: Query for Max Slope Value
arcpy.Statistics_analysis(Aircraft_Specifications, Aircraft_Specifications_Stat, "Ground_Slope_Max_Degrees MAX", "")

# Process: Get Max Slope Value
arcpy.GetFieldValue_mb(Aircraft_Specifications_Stat, "MAX_Ground_Slope_Max_Degrees", "Double", "0")

# Process: Con
arcpy.gp.Con_sa(clippedelev, Input_true_constant__1, Slope_<__MaxSlopeValue, "", "\"VALUE\" <= %Maximum_Ground_Slope%")

# Process: Raster to Polygon
arcpy.RasterToPolygon_conversion(Slope_<__MaxSlopeValue, Slope_Polys, "SIMPLIFY", "VALUE")

# Process: Intersect
arcpy.Intersect_analysis("CombinedVegetationCoverage_C #;'C:\\work\\dcgsa\\huachuca\\templates\\Helicopter Landing Zone\\Maps\\Scratch.gdb\\RasterT_suitabl1' #", clippedveg_Intersect, "ALL", "", "INPUT")

# Process: Optionally Union Feature Classes
arcpy.gp.toolbox = "C:/work/dcgsa/huachuca/templates/Helicopter Landing Zone/Maps/Toolboxes/Helicopter Landing Zone Tools.tbx";
# Warning: the toolbox C:/work/dcgsa/huachuca/templates/Helicopter Landing Zone/Maps/Toolboxes/Helicopter Landing Zone Tools.tbx DOES NOT have an alias. 
# Please assign this toolbox an alias to avoid tool name collisions
# And replace arcpy.gp.OptionallyUnionFeatureClasses(...) with arcpy.OptionallyUnionFeatureClasses_ALIAS(...)
arcpy.gp.OptionallyUnionFeatureClasses(Obstructions, clippedveg_Intersect)

# Process: Dissolve
arcpy.Dissolve_management(ouptutFeatureClass, Output_Feature_Class, "", "", "SINGLE_PART", "DISSOLVE_LINES")

# Process: Project
arcpy.Project_management(Output_Feature_Class, dissolved_Project, Output_Spatial_Reference, "", "")

# Process: Make Feature Layer (2)
arcpy.MakeFeatureLayer_management(dissolved_Project, Dissolved_Projected_Layer, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE")

# Process: Copy to Output Areas
arcpy.CopyFeatures_management(Dissolved_Projected_Layer, Suitable_Areas, "", "0", "0", "0")

# Process: Create Suitable Areas Feature Class
arcpy.FeatureClassToFeatureClass_conversion(Suitable_Areas, Suitable_Areas_Dataset, "%SuitableAreasDatasetName%_Suitable_areas", "", "", "")

